This will eventually become the main ([[Home]]) page for Egg.

* Egg: Emacs Got Git

  Egg is **not** a "git":http://git.or.cz/ _porcelain_. It shares the
  same goals with _git aliases_: make common git operations more
  convenient to perform.

  Egg will not provide binding for many git commands because:

  - In the author's humble opinion, some commands (such as  @git init@) are
    better invoked in a regular shell. 

  - The author is a git _newbie_, and don't know how to use some  advanced git
    commands (such as @git repack@.) 

  - The author is not familiar with some git commands because they  were never
    used by the author. 

  To use egg, simply compile the @egg.el@ file then load the @egg.elc@ file. You
  can put the @egg.elc@ file somewhere in your emacs @load-path@ and add
  @(require 'egg)@ in your @.emacs@ file.

  Once activated, egg will turn on @egg-minor-mode@ when a file was opened in a
  git repository. However, the first thing should be done after loading the
  first time is to to _customize_ egg. 

* Customizations

  M-x customize-group egg

  Some (possibly) important customizations before using egg:

** @egg-git-command@ : 
   this variable's default value is @"git"@. It must be set to the appropriate
   incantation if @git@ is not in @exec-path@. 

** @egg-patch-command@ : 
   same issue as with @egg-git-command@.

** @egg-git-rebase-subdir@ : 
   git's DOTEST directory keep changing from one version of git to another. one
   must set this to the appropriate value for the version of git currently
   used. 

** @egg-mode-key-prefix@ : 
   key prefix for the @egg-minor-mode@'s commands. By default this was set to
   the VC's prefix @C-x v@, and thus, @C-x v =@ would invoke the command
   @egg-file-diff@.

** @egg-refresh-index-in-background@: 
   if enabled, egg will try to refresh the index of the visited repositories
   when emacs has been idle for @egg-background-idle-period@ seconds in order to
   improve git commands's responsiveness. 

** @egg-background-idle-period@ :
   the Emacs's idle threshold  before egg start invoking background jobs.

** @egg-confirm-next-action@ :
   if disabled, egg will not prompt for confirmation in @egg-next-action@.

** @egg-buffer-hide-section-type-on-start@ :
   this option let the user customize the initial display of the deltas in many
   egg special buffers. E.g. one can use this option to initially only show the
   file-names and hide the details of the files in a delta.

* Minor mode key-bindings

  When @egg-minor-mode@ is enabled in a file buffer, egg
  provides many bindings for common git commands as well as egg specific
  commands. The key-prefix shown in the below section assume that
  @egg-mode-key-prefix@ is @C-x v@.

  |-----------------+---------------------------------+----------------------------------------|
  | key             | lisp                            | git                                    |
  |-----------------+---------------------------------+----------------------------------------|
  | C-x v v         | egg-next-action                 |                                        |
  | C-x v w         | egg-commit-log-edit             | git commit -e or git commit -e --amend |
  | C-x v or C-xv s | egg-status                      | git status                             |
  | C-x v l         | egg-log                         | git log                                |
  | C-x v L         | egg-reflog                      |                                        |
  | C-x v h         | egg-file-log                    | git log -- $file                       |
  | C-x v /         | egg-file-log-pickaxe            | git log -S$string -- $file             |
  | C-x v i         | egg-file-stage-current-file     | git add $file                          |
  | C-x v o         | egg-file-checkout-other-version | git checkout $sha1 -- $file            |
  | C-x v u         | egg-file-cancel-modifications   | git checkout -- $file                  |
  | C-x v =         | egg-file-diff                   | git diff -- $file                      |
  | C-x v e         | egg-file-ediff                  |                                        |
  | C-x v ~         | egg-file-version-other-window   | git show                               |
  | C-x v b         | egg-start-new-branch            | git checkout -b                        |
  | C-x v a         | egg-file-toggle-blame-mode      | git blame                              |
  | C-x v g         | egg-grep                        | git grep                               |
  |-----------------+---------------------------------+----------------------------------------|

  Egg also provides a file-mode menu in the menubar which provides
  access to the above commands.

!http://i41.tinypic.com/waoj75.jpg!

* History Annotations/Blame mode

  @egg-file-toggle-blame-mode@

  When blame-mode is on, the buffer is marked read-only. Disabling
  blame-mode will restore the original read-only mode of the buffer.

  !http://img110.mytextgraphics.com/photolava/2008/09/11/eggblame-4bto5s5de.png!

* Special Buffers

  Egg creates various special-buffers for each repositories. Each buffer,
  using different UI, provides different functionalities to the users.

** The delta manipulation buffers
*** the status buffer
*** the diff buffer
** The log editing buffers
*** the commit buffer
*** the tag buffer
** The commit browsing buffers
*** the log buffer
*** the file log buffer
*** the reflog buffer
*** the query or pickax buffer
*** The stash buffer

* The delta editor

  Many special buffers embeds one or multiple diffs, i.e. one more
  multiple sequence of file deltas. The local keymap of those text
  blocks provide a delta-editor that let user maniuplate those diffs
  hunk-by-hunk or file-by-file. E.g.

** If a delta sequence was a diff between the work-dir and the index
   then the delta-editor would let the user moving hunk or file's
   contents from the work-dir to the index or remove the hunk or the
   entire file delta from the work-dir.
** If a delta sequence was a diff between the index and HEAD, then the
   delta edtor would let the user moving hunk or file contents from the
   index to the work-dir.
** If a delta sequence was a diff between commits then the delta-editor
   is in read-only mode. While it cannot move text in read-only mode,
   the local keymap (implementing the delta editor) provide:
*** a convenient way to nagivate the delta sequence.
*** the ability to hide or show a block of text to help the user
   visualizing the global difference

   The delta sequence (diff output) is treated as a hierarchical layout
   by the local-keymap:

# A top-level section (unstaged, unmerged, staged, etc.) contains a
   sequence of file deltas or diffs
# A file delta (difference between a file in the work-dir and in the
   index) contains a sequence of hunks
# A hunks is the smallest unit that can be moved or removed by the
   delta editor.

   The key-bindings in the delta-editor are context-dependent base on the
   position of the cursor in the delta sequence. By example:
   
| *the cursor was in*                                 | *the @s@ key will*                              |
| a diff header in the unstaged (or unmerged) section | stage the contents of the _file_                |
| a diff header in the staged section                 | unstage the contents of the _file_ in the index |
| a hunk header in the unstaged section               | apply the hunk to the index                     |
| a hunk header in the staged section                 | reverse-apply the hunk to the index             |

h4(#hide-show-keymap). The common key bindings in a sequence of deltas

These bindings are available anywhere in a sequence of delta.

|-------------------------------------------------------+--------------------+---------------------------------------------|
| *move to the next _block_*                            | n                  | @egg-buffer-cmd-navigate-next@              |
| move to the previous _block_*                         | p                  | @egg-buffer-cmd-navigate-prev@              |
| *hide/show current block's details*                   | @h@ or @[mouse-2]@ | @egg-section-cmd-toggle-hide-show@          |
| *hide/show details of the current block's sub-blocks* | @H@                | @egg-section-cmd-toggle-hide-show-children@ |
|-------------------------------------------------------+--------------------+---------------------------------------------|


!>http://img902.mytextgraphics.com/photolava/2008/09/08/diffheader-4bss2gy89.png!

h4(#diff-keymap). The common key bindings in a diff section (staged, unstaged or unmerged)

In addition to the previous bindings, the following bindings are
available anywhere in a diff header.

| *open the file of this delta in Emacs's _other window_* | @RET@         | @egg-diff-section-cmd-visit-file-other-window@ |
| *open the file of this delta*                           | @f@           | @egg-diff-section-cmd-visit-file@              |
| *show this delta in ediff*                              | @=@           | @egg-diff-section-cmd-ediff@                   |
| *popup menu for the delta*                              | @[C-mouse-2]@ | the menu is context dependent                  |

h4(#staged-diff-keymap). The key bindings in a staged diff section

In addition to the _two_ previous bindings, the following bindings are
available anywhere in a diff header of a _staged changes_ section.

{background:#ddd}. |\2. *show a 3-way diff of wdir,index and HEAD for the file in ediff3*|
| key  | @=@ |
| lisp | @egg-staged-section-cmd-ediff3@ |
{background:#ddd}. |\2. *unstage the file delta*|
| key  | @s@ |
| lisp | @egg-diff-section-cmd-unstage@ |
| git  | @git reset -- $file@ |

h4(#unstaged-diff-keymap). The key bindings in an unstaged diff section

In addition to the "common delta's bindings":#hide-show-keymap and the
"diff's bindings":#diff-keymap, the following bindings are available anywhere in a
diff header of a _unstaged changes_ section.

{background:#ddd}. |\2. *show the file delta in ediff*|
| key  | @=@ |
| lisp | @egg-unstaged-section-cmd-ediff@ |
{background:#ddd}. |\2. *stage the file delta*|
| key  | @s@ |
| lisp | @egg-diff-section-cmd-stage@ |
| git  | @git add $file@ |
{background:#ddd}. |\2. *remove the file delta*|
| key  | @s@ |
| lisp | @egg-diff-section-cmd-undo@ |
| git  | @git checkout -- $file@ |

!>http://img109.mytextgraphics.com/photolava/2008/09/09/unmergeddiffheader-4bsuia2i7.png!

h4(#unmerged-diff-key-map). The key bindings in an unmerged diff section

In addition to the "common delta's bindings":#hide-show-keymap and the
"diff's bindings":#diff-keymap, the following bindings are available anywhere in a
diff header of a _unmerged changes_ section.

{background:#ddd}. |\2. *show a 3-way diff (ours, theirs and work-dir) of the file delta in ediff3*|
| key  | @=@ |
| lisp | @egg-unmerged-section-cmd-ediff3@ |
{background:#ddd}. |\2. *stage the file delta*|
| key  | @s@ |
| lisp | @egg-diff-section-cmd-stage@ |
| git  | @git add $file@ |
{background:#ddd}. |\2. *remove the file delta*|
| key  | @s@ |
| lisp | @egg-diff-section-cmd-undo@ |
| git  | @git checkout -- $file@ |


h2. The Status Buffer.

The status buffer is launched via @C-x v s@ keys from a
file-buffer when @egg-minor-mode@ is enabled or via the
@s@ key from most egg special buffers.

!http://i42.tinypic.com/2rz5b9u.png!

h4. The primary usage for the status buffer:

* file-by-file or hunk-by-hunk index manipulation.
** stage a single unstaged hunk: add a single hunk from the a file to the index
** remove a single unstaged hunk: remove hunk of delta between the index and the file.
** unstage a single staged hunk: move a hunk from the index to the file.
** update the index with the (new) contents of a file.
** revert the contents of a file to match the index
** revert the contents of a file in the index to match the contents of the file in HEAD.
* resolve merge
** locate conflict marks in a file
** resolve merge using ediff3
* resolve/continue/skip/abort rebase
** locate conflict marks in a file
** resolve rebase using ediff3
* stash work-in-progress
* resolve conflict's in stash applications

h4. Status Buffer Screenshot during rebase

!http://img701.mytextgraphics.com/photolava/2008/09/08/eggstatus-4bshkw5ak.png!

h4. Status Buffer Organization

The status-buffer is organized in a hierarchical layout:
* *General section*
* Help block
* *Unstaged Changes*
* File 1
* _File 1 Hunk 1_
* _File 1 Hunk 2_
* ...
* File 2
* ...
* *Staged Changes*
* File 1
* _File 1 Hunk 1_
* _File 1 Hunk 2_
* ...
* File...
* *Untracked Files*
* File 1
* ...

h3. Status Buffer's key-bindings


h4. The common key bindings in the _egg status-buffer_

{background:#ddd}. |\2. *edit the message and commit staged changes*|
| key  | @c@ |
| lisp | @egg-commit-log-edit@  |
| see  | "description":#egg-commit-log-edit   |
{background:#ddd}. |\2(#egg-log). *show the branch's history*|
| key  | @l@ |
| lisp | @egg-log@ |
| see  | "description":#egg-log  |
{background:#ddd}. |\2(#egg-log). *show the reflog*|
| key  | @L@ |
| lisp | @egg-reflog@ |
| see  | "description":#egg-reflog  |
{background:#ddd}. |\2(#egg-stage-all-files). *add contents of all modified (tracked) files to the index*|
| key  | @S@ |
| lisp | @egg-stage-all-files@  |
| git  | @git add -u@ |
| note | by default, show the file's contents in the index. with prefix (i.e. @C-u C-x v =@), _prompt_ for a specific version|
{background:#ddd}. |\2(#egg-buffer-stash-wip). *stash work-in-progress*|
| key  | @w@ |
| lisp | @egg-buffer-stash-wip@  |
| git  | @git stash save@ |
{background:#ddd}. |\2. *show all blocks/sub-blocks*|
| key  | TBD |
| lisp | @egg-buffer-show-all@ |
{background:#ddd}. |\2. *hide all blocks/sub-blocks*|
| key  | TBD |
| lisp | @egg-buffer-hide-all@ |
{background:#ddd}. |\2. *quit window*|
| key  | @q@ |
| lisp | @quit-window@ |
| note | this command is _not_ part of egg |
| note | this key-binding is common for many egg special buffers |
{background:#ddd}. |\2. *redisplay buffer*|
| key  | @g@ |
| lisp | @egg-buffer-cmd-refresh@ |
| note | this key-binding is common for many egg special buffers |


